name: SonarCloud
on:
  push:
    branches:
      - main
      - staging
      - feature_testing
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      # - name: Install SonarCloud scanner
      #   if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      #   shell: bash
      #   run: |
      #     New-Item -Path .\.sonar\scanner -ItemType Directory
      #     dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: bash
        run: |
          docker run -d --name sonarqube -e SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true -p 9000:9000 sonarqube:latest
          dotnet tool install --global dotnet-coverage
          dotnet tool install --global dotnet-sonarscanner
          dotnet sonarscanner begin /k:"Estifanos-Neway_farm-advisor" /o:"estifanos-neway" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml
          dotnet build build.proj --no-incremental
          dotnet-coverage collect "dotnet test" -f xml -o "coverage.xml"
          dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

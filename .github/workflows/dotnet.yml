name: SonarCloudCICD
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: bash
        run: |
          docker compose up -d
          dotnet tool install --global dotnet-coverage
          dotnet tool install --global dotnet-sonarscanner
          dotnet tool install -g dotnet-ef
          dotnet sonarscanner begin /k:"ManassehV2_FarmAdvisorAPI-G3" /o:"manassehv2" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"  /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml
          cd src
          dotnet build --no-incremental
          dotnet ef migrations add CreateTables
          dotnet ef database update
          cd ../
          dotnet coverage collect "dotnet test" -f xml -o "coverage.xml"
          dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
